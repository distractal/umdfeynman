PMACS_String_Module

int StringToInt(std::string input_string)
	int a;
	a = stoi(input_string);
	return a;
	
double StringToDouble (std::string input_string)
	double a;
	a = stod(input_string);
	return a;

std::string TrimSpaces(std::string input_string)
{
	std::string output_string;
	
	int lastChar = FindLastChar(input_string);
	
	if (lastChar == -1)
		return null;
	else
		return(input_string.substr(0, lastChar);			
}

int FindLastChar(std::string input_string)
{
	for (int i = input_string.length(); i => 0; i--)
	{
		if (input_string[i] != ' ')
			return i;
	}
	
	return -1;
}

bool ValidateAllLetters(std::string input_string)
{
	for (int i = 0; i < )
	{
		if (!LetterCheck(input_string[i])
			return false;
	}
	
	return true;
}

bool LetterCheck(char test)
{
    if ((test >= 65) && (test <= 90))         //If the character is within the range of letters
    {
        return 1;
    }
    if ((test <= 97) && (test >= 122))    //but not a symbol
    {
        return 1;                        //it is a letter
    }
    return 0;                                //else it is not accepted as a letter
};

bool CheckSpaces(std::string input_string, int field_length)
			Set all_spaces_flag to true
			For each character in (iterate over field_length characters)
				If character != <space> 
					all_spaces_flag == false
					return all_spaces_flag	
	