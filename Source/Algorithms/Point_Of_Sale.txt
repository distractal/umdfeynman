(1) Display Point of Sale Menu
		Prompt for store number
		Validate input
		Validate store exists, if not exit
		
		*** CHANGE RING UP CUSTOMER USE CASE?
		Prompt for cashier number
		Validate input
		
		Display Customer Account Lookup
			Account Number // Name & Address
		Query System for Customer Account
			(a) No Account -> Create Account, then proceed
			(b) Account found -> Proceed
		Display Order Entry Screen
			** Display Customer Name, Account Number, Address, Store Number
			(lookup)
		<----- // Create an instance of Transaction
			(a) Check refill eligibility
				(i) If refills (// CHANGE RUC USE CASE)
						Display list of refills
**** USE CASE			RUC -> Cashier asks which items to refill, enters manually.
				*** RAINY DAY ITEM:  Add item automatically
			(b) "A" to add item to order
				"X" to cancel order
				"S" to submit
				"D" to delete item from order				
				<Display any items in transaction_items or nothing>
			(c) If "X", exit to main menu
			(d) If "A"
				(i) Prompt for item number
				(ii) Prompt for quantity
				Add_Item
					Check if 5 items
						If yes, display error and return to b
					Check item stock at store
						If not in stock, display error message
						and return to b.
						If in stock proceed
					Check if item has discount, if so update transaction_item_price for that item.
					Check to see if coupled item exists
						If coupled item does not exist, proceed normally
						If coupled item exists
							Display message indicating coupled item exists, list item#
			(e) If "D"
				Prompt for line number to remove (reference by vector index + 1)
				Check to see if line number exists
					If yes delete line number
					If no display error
				Return to b
			(f) If "S"
				Prompt for approving cashier number
					If originating cashier number == approving cashier number display error and return to b
				(i) Prompt for coupon number
					Check to see if coupon number exists
						If coupon exists apply to discount_pct
						If coupon does not exist display error & return to i
				(ii)  Display final quantites & prices
				(iii)  For each item on order
					Display prescription label:
						Store# 
						Item# Item Name Dosage
						Customer Account#
						Customer Name
						Customer Address
						Quantity
				(iv)  Based on item quantities, subtract from store
				inventory.
				(v)  Add transaction item to Transaction table